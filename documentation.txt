Файл clouds:

Данный код отвечает за генерацию и отрисовку облаков в игровом окне.

Класс "cloud" определяет облако и его свойства, такие как координаты (x, y), скорость (v) и изображение облака (png).

Метод "shift" сдвигает координату облака влево на значение скорости.

Метод "draw" отрисовывает облако на игровом окне с помощью метода "blit" объекта pygame, проходящего по координатам
(x, y) облака и используя изображение облака.

Функция "clouds_run" создает новые облака и удаляет старые облака, а также отрисовывает все облака на игровом окне.

Параметры функции "clouds_run" включают игровое окно (win), список облаков (clouds), список изображений облаков
(clouds_img) и счетчик облаков (counter_cloud).

Функция сначала проверяет, если счетчик облаков превышает границу сдвига (cld_border_shift), то создается новое облако
со случайной координатой по высоте (new_y) и добавляется в список облаков. Затем функция проходит по всем облакам в
списке и сдвигает их, если координата x + ширина облака больше 0. Если же координата облака выходит за пределы игрового
окна, то облако удаляется из списка.

В конце функция отрисовывает все облака на игровом окне с помощью метода "draw" каждого облака и возвращает результат
обновления облаков (res).



Файл lives:

Код представляет собой две функции: check_lives и check_bonuses.

Функция check_lives проверяет события, связанные с потерей жизней игрока. В качестве аргументов она принимает координату
самолетика по оси Y (y), скорость самолетика по оси Y (pl_spdy), переменную, отвечающую за количество жизней (lives),
флаг, указывающий, является ли цель уязвимой в данный момент (vulnerable), многоугольник, задающий самолетик (polygon)
и звук при попадании пули (hit).

Функция сначала проверяет, если самолетик выходит за нижнюю границу игрового окна и при этом уязвимый, то скорость
самолетика по оси Y меняется на противоположную и количество жизней уменьшается на 1. Также устанавливается флаг
уязвимости в False и устанавливается таймер для времени неуязвимости после получения урона.

Затем функция проверяет, если пуля пересекает многоугольник самолетика и при этом цель уязвима, то количество жизней
уменьшается на 1, проигрывается звук попадания пули и пуля удаляется из массива пуль. Также устанавливается флаг
уязвимости в False и устанавливается таймер для времени неуязвимости после получения урона.

Далее функция проверяет, если игрок неуязвим, то проверяет его выход за верхнюю границу игрового окна. Если это
происходит, то скорость самолетика по оси Y меняется на противоположную.

Затем функция увеличивает таймер времени неуязвимости и, если таймер достигает заданного значения, устанавливает флаг
уязвимости в True и сбрасывает таймер.

Функция возвращает измененные значения переменных pl_spdy, lives и vulnerable.

Функция check_bonuses проверяет подбор бонусов игроком. В качестве аргументов она принимает переменную, отвечающую за
количество жизней (lives), флаг, указывающий, является ли цель уязвимой в данный момент (vulnerable), многоугольник,
задающий самолетик (polygon) и звук при подбирании бонуса (bonus_life).

Функция проходит по спискам бонусов и проверяет, если пуля пересекает многоугольник самолетика и при этом это бонус
жизни, тогда количество жизней увеличивается на 1, проигрывается звук подбирания бонуса и бонус удаляется из списка.

Затем функция проверяет, если пуля пересекает многоугольник самолетика и при этом это бонус, давший неуязвимость, то
устанавливается флаг уязвимости в False, проигрывается звук подбирания бонуса и бонус удаляется из списка. Также
устанавливается таймер для времени неуязвимости после получения бонуса.

В конце функция возвращает измененные значения переменных lives и vulnerable.


Файл Bullet:

Функция "bullet_generator" отвечает за обновление позиции пуль и генерацию новых пуль. Она принимает аргументы "win"
(окно отображения), "x" и "y" (координаты точки, относительно которой пули должны двигаться), и "bullet_picture"
(изображение пули). Внутри функции есть переменные "bullet_array" (массив пуль), "speed_counter" (счетчик скорости),
"bullet_speed" (скорость пуль) и "edge" (половина ширины пули). Функция перебирает все пули в массиве "bullet_array".
Если пуля выходит за пределы окна, она удаляется из массива. В противном случае ее координаты обновляются с учетом
скорости. Если в массиве нет пуль, создается новая пуля с случайными координатами под окном и направлением движения к
точке "x", "y". Затем пуля добавляется в массив. Если последняя пуля в массиве достигает нижней границы окна, создается
новая пуля, как и в предыдущем случае. В конце функции пули отрисовываются.

Функция "distance" расчитывает расстояние между точкой и линией. Она принимает аргументы "x_p" и "y_p"
(координаты точки) и "x_l", "y_l", "c_l" (коэффициенты линии в уравнении "x_l * x + y_l * y + c_l = 0"). Функция
использует формулу для расстояния от точки до прямой.

Функция "straight" возвращает коэффициенты прямой, проходящей через две заданные точки. Она принимает аргументы
"first_point" и "second_point" (координаты двух точек). Если точки имеют одинаковые x-координаты, функция возвращает
[1, 0, -x] (это прямая параллельная оси y). Если точки имеют одинаковые y-координаты, функция возвращает [0, 1, -y]
(это прямая параллельная оси x). В противном случае, функция использует формулу для вычисления коэффициентов.

Функция "projection" расчитывает координаты проекции точки на прямую. Она принимает аргументы "x_p" и "y_p"
(координаты точки) и "alfa" (коэффициенты прямой). Функция проверяет специальные случаи, когда один из коэффициентов
равен 0, а затем использует формулу для нахождения координат проекции.

Функция "one_crossing" проверяет, пересекает ли пуля линию между двумя точками. Она принимает аргументы "first_point" и
"second_point" (координаты двух точек), "x_p" и "y_p" (координаты пули) и "r" (радиус пули). Функция проверяет,
находится ли пуля в пределах радиуса от одной из точек. Затем она находит проекцию пули на прямую, проходящую через две
точки, и проверяет, находится ли эта проекция между точками. Наконец, функция проверяет, насколько удалина пуля от
прямой. Если какое-то из этих условий выполняется, функция возвращает True. В противном случае она возвращает False.

Функция "crossing" проверяет, пересекает ли пуля полигон. Она принимает аргументы "polygon_vertexes"
(список вершин полигона), "x_p" и "y_p" (координаты пули) и "r" (радиус пули). Функция перебирает все стороны полигона
и использует функцию "one_crossing", чтобы проверить пересекает ли каждая сторона пулю. Если хотя бы одна сторона
пересекает пулю, функция возвращает True. В противном случае она возвращает False.


Файл bonuses:

Код импортирует необходимые константы из файла "constants".

Затем инициализируются несколько глобальных переменных, включая списки для хранения различных типов бонусов, счетчик и
список для хранения координат.

Код определяет класс с именем "bonuses", который представляет объект бонуса. У него есть атрибуты, такие как координаты
x и y, скорость, радиус и изображение. Он также имеет метод с именем "draw", который используется для отрисовки объекта
бонуса на игровом окне.

Затем код определяет функцию с именем "bonus_generation", которая отвечает за генерацию новых объектов бонусов.

- Сначала проверяется, ушли ли какие-либо существующие объекты бонусов за экран, и если да, они удаляются из
соответствующего списка.

- Затем проверяется, пора ли генерировать новые объекты бонусов на основе времени игры и предопределенного интервала
времени. Если да, генерируются новые объекты бонусов с случайными координатами и скоростями и добавляются в
соответствующие списки.

- Функция также включает особое условие для генерации другого типа бонуса после определенного времени в игре.

Наконец, функция перебирает все объекты бонусов в списках и вызывает метод "draw", чтобы нарисовать их на игровом окне.